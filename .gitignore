################################################################################################################
# Custom
################################################################################################################
.idea/
_gen/
*.mov
models/
*.mp3
*.mp4
test
logs
scripts/rotations/data
data/
_site/

################################################################################################################
# Temporarily ignored files
################################################################################################################

cartpole_random_agent_action_distribution.png
cartpole_random_agent_data.csv
cartpole_random_agent_rewards.png
execution_log.json
notes/bedrock_and_prompt_engineering/1_traditional_ml_models_diagram.png
notes/dsa/transcripts/1_zintroduction to sorting.txt
notes/dsa/transcripts/2_Brute Force_ Selection Sort, Omkar-audio_transcription.txt
notes/dsa/transcripts/3_Basics of Asymptotic Analysis-audio_transcription.txt
notes/dsa/transcripts/4_Brute Force_ Bubble Sort-audio_transcription.txt
notes/dsa/transcripts/5_Sorting 5_Decrease_and_conquer with Insertion Sort.mp4-audio_transcription.txt
notes/dsa/transcripts/6_Sorting 6_Worst Case, Average Case and Best Case analysis.mp4-audio_transcription.txt
notes/dsa/transcripts/7a_Sorting 7a_Divide_and_Conquer_Merge_Sort-audio_transcription.txt
notes/dsa/transcripts/7b_Sorting 7b_Merge_Sort_Analysis-audio_transcription.txt
notes/dsa/transcripts/7c_Recurrence Equations, Big-Oh and Big-Omega notations-audio_transcription.txt
notes/dsa/transcripts/8_In-place and other practical considerations-audio_transcription.txt
notes/dsa/transcripts/9a_Divide and Conquer_ Quicksort-audio_transcription.txt
notes/dsa/transcripts/9b_Lomuto_s Partitioning and Quicksort code-audio_transcription.txt
notes/dsa/transcripts/9c_Hoare_s Paritioning-audio_transcription.txt
notes/dsa/transcripts/11a_Towards_an_Average_Case_Analysis_of_Quicksort.mp4-audio_transcription.txt
notes/dsa/transcripts/11b_Average_Case_Analysis_of_Quicksort.mp4-audio_transcription.txt
notes/dsa/transcripts/12 Stability-audio_transcription.txt
notes/dsa/transcripts/13 Transform and conquer-audio_transcription.txt
notes/dsa/transcripts/14 Binary Heap operations and Heapsort-audio_transcription.txt
notes/dsa/transcripts/15 Decision Trees and Lower bounds on Sorting Optional-audio_transcription.txt
notes/dsa/transcripts/16 Counting Sort-audio_transcription.txt
notes/dsa/transcripts/17 Radix Sort-audio_transcription.txt
notes/mlops/mlops_1_001.txt
notes/mlops/mlops_1_002.txt
notes/mlops/mlops_1_003.txt
notes/mlops/mlops_1_004.txt
notes/mlops/mlops_1_005.txt
notes/reinforcement/3_RL_1_Live_Code.ipynb
notes/reinforcement/3_rl1.md
notes/reinforcement/rl1_part_1_small.txt
notes/reinforcement/rl1_part_1_tiny.txt
notes/reinforcement/rl1_part_1.txt
notes/reinforcement/rl1_part_1.vtt
notes/reinforcement/rl1_part_2_large.txt
notes/reinforcement/rl1_part_2.txt
notes/reinforcement/rl1_part_3.txt
notes/reinforcement/rl1_part_4.txt
scripts/cartpole_backup.py
scripts/cartpole.py
scripts/transcribe_medium.py
scripts/transcribe_small.py
scripts/bob/main.py
scripts/transcribe2/convert_audio.py


################################################################################################################
# JetBrains
################################################################################################################

# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# AWS User-specific
.idea/**/aws.xml

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# SonarLint plugin
.idea/sonarlint/

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.idea/httpRequests

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser


################################################################################################################
# Visual Studio Code
################################################################################################################


.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix


################################################################################################################
# macOS
################################################################################################################


# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk


################################################################################################################
# Python
################################################################################################################


# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
